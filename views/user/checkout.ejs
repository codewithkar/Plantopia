<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="tailwindcss/output.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    />
    <title>Checkout - Plantopia</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>
<body class="bg-[##FFF6F4]">
    <%- include("../partials/nav") %>

    <div class="container mx-auto px-4 py-8 mt-28">
        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Left Section - Address and Payment -->
            <div class="lg:w-2/3">
                <!-- Address Selection -->
                <div class="bg-white p-6 rounded-2xl shadow-lg mb-6">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6">Select Delivery Address</h2>
                    
                    <div class="space-y-4">
                        <% if (addresses && addresses.length > 0) { %>
                            <% addresses.forEach((address, index) => { %>
                                <div class="border rounded-lg p-4 hover:border-black transition-colors">
                                    <label class="flex items-start gap-4 cursor-pointer">
                                        <input 
                                            type="radio" 
                                            name="selectedAddress" 
                                            value="<%= address._id %>"
                                            class="mt-1"
                                            <%= index === 0 ? 'checked' : '' %>
                                        >
                                        <div>
                                            <p class="font-medium"><%= address.fullName %></p>
                                            <p class="text-gray-600"><%= address.addressLine1 %></p>
                                            <p class="text-gray-600"><%= address.addressLine2 %></p>
                                            <p class="text-gray-600"><%= address.city %>, <%= address.state %> <%= address.pincode %></p>
                                            <p class="text-gray-600">Phone: <%= address.mobileNumber %></p>
                                        </div>
                                    </label>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="text-center py-4">
                                <p class="text-gray-500 mb-4">No addresses found</p>
                            </div>
                        <% } %>
                        
                        <button 
                            onclick="window.location.href='/address'" 
                            class="w-full mt-4 bg-gray-100 text-gray-800 py-3 rounded-xl font-medium hover:bg-gray-200 transition-colors flex items-center justify-center gap-2"
                        >
                            <i class="fas fa-plus"></i>
                            Add New Address
                        </button>
                    </div>
                </div>

                <!-- Payment Method -->
                <div class="bg-white p-6 rounded-2xl shadow-lg">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6">Payment Method</h2>
                    
                    <div class="space-y-4">
                        <!-- Wallet Payment Option -->

                        <!-- COD Payment Option -->
                        <label id="codOption" 
                               class="flex items-center gap-3 p-3 border rounded-lg cursor-pointer transition-all duration-300"
                               data-final-total="<%= totalPrice %>">
                            <input type="radio" 
                                   name="paymentMethod" 
                                   value="cod" 
                                   id="codPayment"
                                   onchange="handlePaymentMethodChange()">
                            <div class="flex flex-col">
                                <span class="flex items-center gap-2">
                                    <i class="fas fa-money-bill"></i> Cash on Delivery
                                    <span id="codAvailability" class="text-xs px-2 py-1 rounded hidden"></span>
                                </span>
                                <span class="text-sm text-gray-500" id="codMessage">
                                    Pay when you receive the order
                                </span>
                            </div>
                        </label>

                        <!-- Online Payment Option -->
                       
                    </div>
                </div>
            </div>

            <!-- Right Section - Order Summary -->
            <div class="lg:w-1/3">
                <div class="bg-white p-6 rounded-2xl shadow-lg sticky top-28">
                    <h2 class="text-xl font-bold text-gray-800 mb-6">Order Summary</h2>
                    
                    <!-- Items Summary -->
                    <div class="space-y-4 max-h-48 overflow-y-auto mb-6">
                        <% cartItems.forEach(item => { %>
                            <div class="flex gap-4">
                                <img 
                                    src="<%= item.product.imageUrl[0] %>" 
                                    alt="<%= item.product.productName %>"
                                    class="w-16 h-16 object-cover rounded-lg"
                                >
                                <div class="flex-1">
                                    <h4 class="font-medium"><%= item.product.productName %></h4>
                                    <p class="text-gray-500 text-sm">Qty: <%= item.quantity %></p>
                                    <p class="text-gray-800">₹<%= item.total %></p>
                                    
                                </div>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Coupon Section -->
                   

                    <!-- Price Breakdown -->
                    <div class="space-y-3">
                        <div class="flex justify-between">
                            <span>Subtotal:</span>
                            <span>₹<span id="subtotal"><%= totalPrice.toFixed(2) %></span></span>
                        </div>
                        
                        
                        
                        <div class="flex justify-between font-bold">
                            <span>Total Amount:</span>
                            <span>₹<span id="finalTotal"><%= totalPrice.toFixed(2) %></span></span>
                        </div>
                    </div>

                    <!-- Place Order Button -->
                    <button 
                        onclick="placeOrder()"
                        class="w-full bg-black text-white py-3 rounded-xl font-medium hover:bg-gray-800 transition-all duration-300 mt-6"
                    >
                        Place Order
                    </button>

                    <!-- Additional Info -->
                    <div class="mt-4 text-center text-xs text-gray-500">
                        <p class="flex items-center justify-center gap-2">
                            <i class="fas fa-shield-alt"></i>
                            Secure Checkout
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <!-- Add this coupon modal at the end of the body -->
    

    <!-- Add this section for wallet balance display -->
   
    <script>
        let appliedCoupon = null;
        let currentDiscount = 0;
        const cartTotal = <%= totalPrice %>;

        function updateTotalWithDiscount(discount) {
            const finalTotalElement = document.getElementById('finalTotal');
            const discountElement = document.getElementById('discountAmount');
            const discountRow = document.getElementById('discountRow');
            
            if (discount > 0) {
                discountRow.classList.remove('hidden');
                discountElement.textContent = discount.toFixed(2);
                finalTotalElement.textContent = (cartTotal - discount).toFixed(2);
            } else {
                discountRow.classList.add('hidden');
                discountElement.textContent = '0';
                finalTotalElement.textContent = cartTotal.toFixed(2);
            }
        }

        // Add this function to get the current total with discount
        function getDiscountedTotal() {
            const subtotal = parseFloat(document.getElementById('subtotal').textContent);
            const discountAmount = parseFloat(document.getElementById('discountAmount').textContent) || 0;
            return subtotal - discountAmount;
        }


        async function placeOrder() {
            try {
                // Check if address is selected
                const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
                if (!selectedAddress) {
                    throw new Error('Please select a delivery address');
                }

                // Check if payment method is selected
                const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked');
                if (!selectedPayment) {
                    throw new Error('Please select a payment method');
                }

                const paymentMethod = selectedPayment.value;
                const finalAmount = parseFloat(document.getElementById('finalTotal').textContent);

                // Validate COD payment method
                if (paymentMethod === 'cod' && finalAmount > 9000) {
                    throw new Error('Cash on Delivery is not available for orders above ₹9,000. Please choose a different payment method.');
                }

                let response;
                 if (paymentMethod === 'cod') {
                    response = await fetch('/checkout/place-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            addressId: selectedAddress.value,
                            paymentMethod: 'cod',
                            couponCode: document.getElementById('appliedCouponCode')?.textContent
                        })
                    });
                    const data = await response.json();
                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Order Placed Successfully!',
                            text: `Order ID: ${data.orderId}`,
                            confirmButtonColor: '#000000',
                            timer: 2000,
                            timerProgressBar: true,
                            showConfirmButton: true
                        });
                        window.location.href = `/orders?success=true&orderId=${data.orderId}`;
                    } else {
                        throw new Error(data.message);
                    }
                } 
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message,
                    confirmButtonColor: '#000000'
                });
            }
        }

        
        function updateCODAvailability(finalAmount) {
            const codOption = document.getElementById('codOption');
            const codPayment = document.getElementById('codPayment');
            const codAvailability = document.getElementById('codAvailability');
            const codMessage = document.getElementById('codMessage');

            if (finalAmount > 9000) {
                codOption.classList.add('opacity-60');
                codOption.classList.remove('hover:bg-gray-50');
                codPayment.disabled = true;
                codAvailability.classList.remove('hidden');
                codAvailability.classList.add('bg-red-100', 'text-red-800');
                codAvailability.textContent = 'Not Available';
                codMessage.textContent = 'Not available for orders above ₹9,000';
                
                // If COD was selected, switch to a different payment method
                if (codPayment.checked) {
                    document.querySelector('input[name="paymentMethod"][value="online"]').checked = true;
                }
            } else {
                codOption.classList.remove('opacity-60');
                codOption.classList.add('hover:bg-gray-50');
                codPayment.disabled = false;
                codAvailability.classList.add('hidden');
                codMessage.textContent = 'Pay when you receive the order';
            }
        }

        // Update COD availability when coupon is applied or removed
        function updatePaymentMethodsAfterCoupon(finalAmount) {
            updateCODAvailability(finalAmount);
        }

        // Initial update
        document.addEventListener('DOMContentLoaded', function() {
            const finalTotal = parseFloat(document.getElementById('codOption').dataset.finalTotal);
            updateCODAvailability(finalTotal);
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Check for success parameter in URL
            const urlParams = new URLSearchParams(window.location.search);
            const success = urlParams.get('success');
            const orderId = urlParams.get('orderId');
            
            if (success === 'true' && orderId) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed Successfully!',
                    text: `Your order (${orderId}) has been placed successfully.`,
                    confirmButtonColor: '#000000'
                });
                
                // Clean up URL without refreshing the page
                window.history.replaceState({}, document.title, '/orders');
            }
        });
    </script>
</body>
</html> 