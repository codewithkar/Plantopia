<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Wishlist - Onyx</title>
    <link rel="stylesheet" href="/tailwindcss/output.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body class="bg-gray-100">
    <%- include("../partials/nav") %>

    <div class="container mx-auto px-4 py-8 mt-28">
        <h1 class="text-2xl font-bold text-gray-800 mb-6">My Wishlist</h1>

        <% if (wishlist.length === 0) { %>
            <div class="bg-white rounded-2xl shadow-lg p-8 text-center">
                <div class="text-gray-500 mb-4">
                    <i class="fas fa-heart text-4xl"></i>
                </div>
                <h2 class="text-xl font-semibold text-gray-800 mb-2">Your wishlist is empty</h2>
                <p class="text-gray-600 mb-6">Start adding items you love to your wishlist</p>
                <a href="/shop" class="inline-block bg-black text-white px-6 py-3 rounded-xl hover:bg-gray-800 transition-colors">
                    Continue Shopping
                </a>
            </div>
        <% } else { %>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                <% wishlist.forEach(item => { %>
                    <div class="bg-white rounded-2xl shadow-lg overflow-hidden group relative flex flex-col h-full" id="wishlist-item-<%= item.productId._id %>">
                        <% if (item.productId && item.productId.isActive) { %>
                            <a href="/product/<%= item.productId._id %>" class="block flex-grow">
                        <% } else { %>
                            <div onclick="showUnavailableMessage()" class="block flex-grow cursor-not-allowed">
                        <% } %>
                            <div class="relative aspect-square">
                                <img 
                                    src="<%= item.productId.imageUrl[0] %>" 
                                    alt="<%= item.productId.productName %>"
                                    class="w-full h-full object-contain"
                                >
                                <% if (item.productId && !item.productId.isActive) { %>
                                    <div class="absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center">
                                        <span class="text-white text-sm font-medium px-3 py-1 rounded-full bg-black bg-opacity-75">
                                            Currently Unavailable
                                        </span>
                                    </div>
                                <% } %>
                            </div>
                            
                            <div class="p-4">
                                <h3 class="font-semibold text-gray-800 mb-2 line-clamp-2">
                                    <%= item.productId.productName %>
                                </h3>
                                <p class="text-gray-600">â‚¹<%= item.productId.price %></p>
                            </div>
                        <% if (item.productId && item.productId.isActive) { %>
                            </a>
                        <% } else { %>
                            </div>
                        <% } %>
                        
                        <div class="p-4 bg-white border-t mt-auto">
                            <div class="flex items-center gap-2">
                                <% if (item.productId && !item.productId.isActive) { %>
                                    <button 
                                        class="bg-gray-300 text-gray-600 px-4 py-2 rounded-lg cursor-not-allowed flex-1"
                                        disabled
                                    >
                                        Unavailable
                                    </button>
                                <% } else if (item.productId.stock > 0) { %>
                                    <button 
                                        onclick="addToCart('<%= item.productId._id %>')"
                                        class="bg-black text-white px-4 py-2 rounded-lg hover:bg-gray-800 transition-colors flex-1"
                                    >
                                        Add to Cart
                                    </button>
                                <% } else { %>
                                    <button 
                                        class="bg-gray-300 text-gray-600 px-4 py-2 rounded-lg cursor-not-allowed flex-1"
                                        disabled
                                    >
                                        Out of Stock
                                    </button>
                                <% } %>
                            </div>
                        </div>

                        <button 
                            onclick="removeFromWishlist('<%= item.productId._id %>')"
                            class="absolute top-4 right-4 bg-white rounded-full p-2 shadow-md hover:bg-red-50 transition-colors"
                        >
                            <i class="fas fa-heart text-red-500"></i>
                        </button>
                    </div>
                <% }); %>
            </div>
        <% } %>
    </div>

    <%- include('../partials/footer') %>

    <script>
        async function removeFromWishlist(productId) {
            try {
                // Prevent event propagation
                event.preventDefault();
                event.stopPropagation();

                const response = await fetch(`/wishlist/remove/${productId}`, {
                    method: 'DELETE'
                });

                const data = await response.json();

                if (data.success) {
                    // Remove item from UI
                    const item = document.getElementById(`wishlist-item-${productId}`);
                    item.style.opacity = '0';
                    item.style.transform = 'scale(0.95)';
                    item.style.transition = 'all 0.3s ease';
                    
                    setTimeout(() => {
                        item.remove();
                        // If wishlist is empty, reload page to show empty state
                        if (document.querySelectorAll('[id^="wishlist-item-"]').length === 0) {
                            window.location.reload();
                        }
                    }, 300);

                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed from wishlist',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Error removing from wishlist',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        }

        async function addToCart(productId) {
            try {
                // Prevent event propagation
                event.preventDefault();
                event.stopPropagation();

                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity: 1 })
                });

                const data = await response.json();
                
                // Check if product is not active
                if (data.message && data.message.includes('not available')) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Product Unavailable',
                        text: 'This product is currently not available',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                    // Optionally reload the page to update the UI
                    setTimeout(() => {
                        window.location.reload();
                    }, 3000);
                    return;
                }
                
                // If the response includes a success message, show success alert
                if (data.message && data.message.includes('added to cart')) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message,
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    });
                } else if (data.message && data.message.includes('Maximum limit')) {
                    // Handle quantity limit error
                    Swal.fire({
                        icon: 'warning',
                        title: 'Quantity Limit Reached',
                        text: data.message,
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                } else {
                    throw new Error(data.message || 'Failed to add to cart');
                }
            } catch (error) {
                console.error('Cart error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Error adding to cart',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        }

        async function toggleWishlist(productId) {
            try {
                // Check if product is in wishlist
                const checkResponse = await fetch(`/wishlist/check/${productId}`);
                const checkData = await checkResponse.json();

                if (checkData.success) {
                    if (checkData.isInWishlist) {
                        // Remove from wishlist
                        const response = await fetch(`/wishlist/remove/${productId}`, {
                            method: 'DELETE'
                        });
                        const data = await response.json();

                        if (data.success) {
                            // Update UI - change heart to outline
                            document.querySelector(`#wishlist-btn-${productId} i`)
                                .classList.replace('fas', 'far');
                        }
                    } else {
                        // Add to wishlist
                        const response = await fetch('/wishlist/add', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productId })
                        });
                        const data = await response.json();

                        if (data.success) {
                            // Update UI - change heart to solid
                            document.querySelector(`#wishlist-btn-${productId} i`)
                                .classList.replace('far', 'fas');
                        }
                    }
                }
            } catch (error) {
                console.error('Wishlist toggle error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error updating wishlist',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        }

        function showUnavailableMessage() {
            Swal.fire({
                icon: 'info',
                title: 'Product Unavailable',
                text: 'This product is currently not available in our store',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });
        }
    </script>
</body>

</html>